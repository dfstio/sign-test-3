"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/v9qtqXdP0aq
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Chivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Fragment, useState } from "react";
import { sign } from "@/lib/sign";

export default function SignTest() {
  const [value, setValue] = useState<number>(0);
  const [loading, setLoading] = useState<boolean>(false);

  async function signButton() {
    setLoading(true);
    const hash = await sign(value);
    console.log("Hash", hash);
    setLoading(false);
  }

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
      <div className="max-w-lg px-4 py-8 bg-white rounded-lg shadow-md">
        <div className="mb-6 text-center">
          <h1 className="text-3xl font-bold">PROVE TX IN THE CLOUD</h1>
        </div>
        <div className="mb-4">
          <Label className="mb-2" htmlFor="amount">
            Value
          </Label>
          <Input
            className="w-full"
            id="amount"
            min="1"
            placeholder="Enter an amount greater than 0"
            type="number"
            onChange={(e) => setValue(parseInt(e.target.value))}
          />
        </div>
        <Button className="w-full" onClick={signButton}>
          {loading === false ? (
            <Fragment key=".0">Sign</Fragment>
          ) : (
            <Fragment key=".1">
              <LoaderPinwheelIcon className="mr-2 h-4 w-4 animate-spin" />
              Signing...
            </Fragment>
          )}
        </Button>
      </div>
    </div>
  );
}

function LoaderPinwheelIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M2 12c0-2.8 2.2-5 5-5s5 2.2 5 5 2.2 5 5 5 5-2.2 5-5" />
      <path d="M7 20.7a1 1 0 1 1 5-8.7 1 1 0 1 0 5-8.6" />
      <path d="M7 3.3a1 1 0 1 1 5 8.6 1 1 0 1 0 5 8.6" />
      <circle cx="12" cy="12" r="10" />
    </svg>
  );
}
